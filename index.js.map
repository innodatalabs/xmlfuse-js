{"version":3,"file":"index.js","sources":["index.mjs"],"sourcesContent":["import { scan, unscan, textOf, withPeer, ENTER, TEXT, EXIT, COMMENT, PI } from '@innodatalabs/lxmlx-js';\n\nconst SPOT = 'spot';  // internal event type to mark zero-length markup\n\nfunction assert(condition, message) {\n    if (!condition) {\n        throw new Error('Assertion failed: ' + message);\n    }\n}\n\nexport function fuse(xml1, xml2, options) {\n    const { stripSlaveTopTag=true, nsmap } = options || {};\n\n    const events1 = [...scan(xml1)];\n    const events2 = [...scan(xml2)];\n\n    if (stripSlaveTopTag) {\n        events2.splice(0, 1);\n        events2.splice(events2.length-1, 1);\n    }\n\n    const events = fuseEvents(events1, events2, options);\n\n    return unscan(events, {nsmap});\n}\n\n\nexport function* fuseEvents(events1, events2, options) {\n    const { autoSegment=true, preferSlaveInner=true } = options || {};\n\n    const ev1 = [...events1];\n    const ev2 = [...events2];\n\n    const tx1 = textOf(ev1);\n    const tx2 = textOf(ev2);\n    if (tx1 !== tx2) {\n        raiseTextDiff(tx1, tx2);\n    }\n\n    const offsets = new Set([...textOffsets(ev1), ...textOffsets(ev2)]);\n\n    const sev1 = segmentText(ev1, offsets);\n    const sev2 = segmentText(ev2, offsets);\n\n    yield* analyze(sev1, sev2, options);\n}\n\nfunction raiseTextDiff(t1, t2) {\n    const l = t1.length > t2.length ? t2.length : t1.length;\n    for (let i = 0; i < l; i++) {\n        if (t1[i] != t2[i]) {\n            const snippet1 = t1.slice(i < 20 ? 0 : i-20, i+20);\n            const snippet2 = t2.slice(i < 20 ? 0 : i-20, i+20);\n            throw new Error('Input documents have different text at offset ' +\n                i + ':\\n' + snippet1 + '\\n' + snippet2);\n        }\n    }\n    const snippet1 = t1.slice(l < 20 ? 0 : l-20, l+20);\n    const snippet2 = t2.slice(l < 20 ? 0 : l-20, l+20);\n    if (t1.length > t2.length) {\n        throw new Error('Master document has longer text than the slave:\\n' +\n            snippet1 + '\\n' + snippet2);\n    } else {\n        throw new Error('Master document has shorter text than the slave:\\n' +\n            snippet1 + '\\n' + snippet2);\n    }\n}\n\nexport function textOffsets(events) {\n    const offsets = new Set();\n\n    let off = 0;\n    for (const e of events) {\n        if (e.type === TEXT) {\n            offsets.add(off);\n            off += e.text.length;\n        }\n    }\n    offsets.add(off);\n\n    return offsets;\n}\n\nexport function* segmentText(events, offsets) {\n    offsets = [...offsets].sort((a, b) => +a-b).reverse();\n    if (offsets.length > 0 && offsets[offsets.length-1] === 0) {\n        offsets.pop();\n    }\n\n    let off = 0;\n    for (const e of events) {\n        if (e.type === TEXT) {\n            let text = e.text;\n            let l = text.length;\n            while (offsets.length > 0 && offsets[offsets.length-1] - off < l) {\n                const o = offsets.pop() - off;\n                yield {type: TEXT, text: text.slice(0, o)};\n                text = text.slice(o);\n                off += o;\n                l -= o;\n            }\n            yield {type: TEXT, text: text};\n            off += text.length;\n            if (offsets.length > 0 && offsets[offsets.length-1] === off) {\n                offsets.pop();\n            }\n        } else {\n            yield e;\n        }\n    }\n}\n\nfunction* normalizePrefix(prefix) {\n    const out = [];\n    const stack = [];\n\n    for (const e of [...prefix].reverse()) {\n        if (e.type === EXIT) {\n            stack.push(e);\n        } else if (e.type === ENTER) {\n            if (stack.length > 0) {\n                out.splice(0, 0, e);\n                out.push(stack.pop());\n            } else {\n                if (out.length) {\n                    yield {type: SPOT, spot: [...out]};\n                    out.length = 0;\n                }\n                yield e;\n            }\n        } else {\n            assert(e.type === PI || e.type === COMMENT);\n            out.push(e);\n        }\n    }\n\n    if (out.length) {\n        yield {type: SPOT, spot: out};\n    }\n}\n\nexport function* asTokenStream(events) {\n    let token = {prefix: [], suffix: []};\n    for (const [e,p] of withPeer(events)) {\n        if (e.type === ENTER || e.type === PI || e.type === COMMENT) {\n            if (token.text) {\n                yield {\n                    prefix: [...normalizePrefix(token.prefix)].reverse(),\n                    text: token.text,\n                    suffix: [...token.suffix],\n                };\n                token = {prefix: [], suffix: []};\n            }\n            token.prefix.push(e);\n        } else if (e.type === EXIT) {\n            if (token.text) {\n                token.suffix.push({type: EXIT, peer: p});\n            } else {\n                token.prefix.push({type: EXIT, peer: p});\n            }\n        } else if (e.type === TEXT) {\n            if (token.text) {\n                yield {\n                    prefix: [...normalizePrefix(token.prefix)].reverse(),\n                    text: token.text,\n                    suffix: [...token.suffix],\n                };\n                token = {prefix: [], suffix: []};\n            }\n            token.text = e.text;\n        } else {\n            throw new Error('unexpected event type: ' + e);\n        }\n    }\n\n    if (token.text) {\n        yield {\n            prefix: [...normalizePrefix(token.prefix)].reverse(),\n            text: token.text,\n            suffix: [...token.suffix],\n        };\n    }\n}\n\nfunction zip(arr1, arr2) {\n    if (arr1.length < arr2.length) {\n        return arr1.map((k, i) => [k, arr2[i]]);\n    } else {\n        return arr2.map((k, i) => [arr1[i], k]);\n    }\n}\n\nfunction* analyze(events1, events2, options) {\n    options = Object.assign({\n        preferSlaveInner: true,\n        autoSegment: true,\n    }, options);\n\n    const sync = [];\n\n    for (const [master, slave] of zip([...asTokenStream(events1)], [...asTokenStream(events2)])) {\n        assert(master.text === slave.text);\n        sync.push({\n            master: master,\n            slave: slave,\n            text: master.text,\n            prefix: [],\n            suffix: [],\n        });\n    }\n\n    function localReduce(prefix, suffix, outPrefix, outSuffix) {\n        while (prefix.length > 0) {\n            if (prefix[prefix.length-1].type === SPOT) {\n                outPrefix.splice(0, 0, prefix.pop());\n                continue;\n            }\n            if (suffix.length === 0) {\n                break;\n            }\n            const x = prefix.pop();\n            assert(x.type === ENTER, 'localReduce1');\n            outPrefix.splice(0, 0, x);\n            const [y] = suffix.splice(0, 1);\n            assert(y.type === EXIT, 'localReduce2');\n            assert(y.peer === x, 'localReduce3');\n            outSuffix.push(y);\n        }\n    }\n\n    function helper(index) {\n        for (let i = 0; i < index; i++) {\n            const s = sync[i];\n            assert(s.master.suffix.length === 0, 'precondition failed (1) ' + index + ' ' + i);\n            assert(s.slave.suffix.length === 0, 'precondition failed (2)');\n        }\n\n        const h = sync[index];\n        for (let i = index; i >= 0; i--) {\n            const l = sync[i];\n\n            if (options.preferSlaveInner) {\n                localReduce(l.slave.prefix, h.slave.suffix, l.prefix, h.suffix);\n                localReduce(l.master.prefix, h.master.suffix, l.prefix, h.suffix);\n            } else {\n                localReduce(l.master.prefix, h.master.suffix, l.prefix, h.suffix);\n                localReduce(l.slave.prefix, h.slave.suffix, l.prefix, h.suffix);\n            }\n\n            if (h.master.suffix.length === 0 && h.slave.suffix.length === 0) {\n                return;  // reached our invariant, done helper\n            }\n\n            if (l.master.prefix.length === 0 && l.slave.prefix.length === 0) {\n                continue;  // match with earlier tags\n            }\n\n            // here we have a conflict\n            if (!options.autoSegment) {\n                const o = l.master.prefix.length ?\n                    l.master.prefix[l.master.prefix.length-1] :\n                    l.slave.prefix[l.slave.prefix.length-1];\n                const c = h.master.suffix.length ?\n                    h.master.suffix[0] : h.slave.suffix[0];\n                throw new Error('Conflicting markup: <' + o.tag +\n                    '> just before \"' + l.text + '\" and </' + c.peer.tag +\n                    '> just after \"' + h.text + '\"');\n            }\n\n            if (l.master.prefix.length > 0) {\n                assert(l.slave.prefix.length === 0, 'helper-a0');\n                assert(h.master.suffix.length === 0, 'helper-a1');\n                assert(h.slave.suffix.length > 0, 'helper-a2');\n                // close slave on the prev step and re-open here\n\n                sync[i-1].slave.suffix.push(...h.slave.suffix);\n                for(const e of [...h.slave.suffix].reverse()) {\n                    l.prefix.push(e.peer);\n                }\n                h.suffix.push(...h.slave.suffix);\n                h.slave.suffix.length = 0;\n                for (let j = i - 1; j >= 0; j--) {\n                    localReduce(sync[j].slave.prefix, sync[i-1].slave.suffix, sync[j].prefix, sync[i-1].suffix);\n                    if (sync[i-1].slave.suffix.length === 0) {\n                        break;  // for speed\n                    }\n                }\n                assert( sync[i-1].slave.suffix.length === 0, '(1) sanity');\n                continue;\n            } else {\n                assert(l.slave.prefix.length > 0, 'helper-b0');\n                assert(h.slave.suffix.length === 0, 'helper-b1');\n                assert(h.master.suffix.length > 0, 'helper-b2');\n                // close slave here and re-open on the right\n                l.prefix.push(...l.slave.prefix);\n                for (const e of [...l.slave.prefix].reverse()) {\n                    h.suffix.push({type: EXIT, peer: e});\n                }\n                sync[index+1].slave.prefix.push(...l.slave.prefix);\n                l.slave.prefix.length = 0;\n                for (let j = i - 1; j >= 0; j--) {\n                    localReduce(sync[j].master.prefix, h.master.suffix, sync[j].prefix, h.suffix);\n                    if (h.master.suffix.length === 0) {\n                        break;\n                    }\n                }\n                assert(h.master.suffix.length === 0, '(2) sanity');\n                return;\n            }\n        }\n    }\n\n    for (let index = 0; index < sync.length; index += 1) {\n        helper(index);\n    }\n\n    const stack = [];\n    for (let x = 0; x < sync.length; x++) {\n        const t = sync[x];\n\n        for (let y = 0; y < t.prefix.length; y++) {\n            const e = t.prefix[y];\n            if (e.type === SPOT) {\n                yield* e.spot;\n            } else {\n                assert(e.type === ENTER);\n                stack.push(e);\n                yield e;\n            }\n        }\n\n        yield {type: TEXT, text: t.text};\n\n        for (let y = 0; y < t.suffix.length; y++) {\n            const e = t.suffix[y];\n            assert(e.type === EXIT);\n            assert(e.peer === stack[stack.length-1]);\n            stack.pop();\n\n            yield {type: EXIT};\n        }\n    }\n}\n"],"names":["scan","unscan","textOf","TEXT","EXIT","ENTER","PI","COMMENT","withPeer"],"mappings":"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"}